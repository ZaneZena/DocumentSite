import{_ as n,c as s,o as a,a3 as p}from"./chunks/framework.C_bjHMch.js";const _=JSON.parse('{"title":"Mongodb基础","description":"","frontmatter":{},"headers":[],"relativePath":"serverend/Mongodb/index.md","filePath":"serverend/Mongodb/index.md"}'),l={name:"serverend/Mongodb/index.md"},e=p(`<h1 id="mongodb基础" tabindex="-1">Mongodb基础 <a class="header-anchor" href="#mongodb基础" aria-label="Permalink to &quot;Mongodb基础&quot;">​</a></h1><h2 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1、显示数据库列表</span></span>
<span class="line"><span>show dbs</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2、切换或创建数据(有则切换，无则创建)</span></span>
<span class="line"><span>use 数据库名</span></span>
<span class="line"><span></span></span>
<span class="line"><span>3、删除数据库</span></span>
<span class="line"><span>db.dropDatabase()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>六、集合操作</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1、创建集合</span></span>
<span class="line"><span>db.createCollection(集合名, [参数])</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2、查看集合</span></span>
<span class="line"><span>show collections/show tables</span></span>
<span class="line"><span></span></span>
<span class="line"><span>3、删除集合</span></span>
<span class="line"><span>db.集合名.drop()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>七、数据基础操作</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1、新增</span></span>
<span class="line"><span>db.集合名.insert({“键名1”:值1, “键名2”: 值2 …})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.yunfan_test.insert({“name”:“张三”,“age”:24})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2、查询</span></span>
<span class="line"><span>db.集合名.findOne() # 查询一行</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.集合名.find() # 查询全部</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.集合名.find().pretty() # 格式化打印</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.集合名.find({查找条件}) # 按条件查找</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.yunfan_test.find({“age”:24})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>3、修改</span></span>
<span class="line"><span>db.集合名.update({查询条件}, {修改后结果}) #修改整行</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.students.update({查找条件}, {$set:{“要修改的字段名1”:修改后的值, “要修改的字段名2”: “值2”}}) #修改指定字段的值</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.yunfan_test.update({“name”:“张三”}, {“name”:“张三”, “age”:25})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.yunfan_test.update({“name”:“张三”}, {$set:{“age”:26}})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>4、删除</span></span>
<span class="line"><span>db.集合名.remove({查询条件})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.集合名.remove({}) # 删除全部数据</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.yunfan_test.remove({“name”:“张三”})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.yunfan_test.remove({})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>八、高级查询</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1、比较运算符查询</span></span>
<span class="line"><span>db.集合名.find({“键名”: {比较运算符1:值1, 比较运算符2:值2} })</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.yunfan_test.find({“age”: {$lt:24}})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>说明：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>| 符号 | 释义 |</span></span>
<span class="line"><span></span></span>
<span class="line"><span>| :-- | :-- |</span></span>
<span class="line"><span></span></span>
<span class="line"><span>| $gt | 大于 |</span></span>
<span class="line"><span></span></span>
<span class="line"><span>| $lt | 小于 |</span></span>
<span class="line"><span></span></span>
<span class="line"><span>| $gte | 大于等于 |</span></span>
<span class="line"><span></span></span>
<span class="line"><span>| $lte | 小于等于欧 |</span></span>
<span class="line"><span></span></span>
<span class="line"><span>| $ne | 不等于 |</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2、in/not in</span></span>
<span class="line"><span>db.集合名.find({“键名”: {$in:[值1, 值2, 值3 …]} })</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.集合名.find({“键名”: {$nin:[值1, 值2, 值3 …]} })</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.yunfan_test.find({“age”:{$in:[20,21,22]}})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.yunfan_test.find({“age”:{$in:[20,21,22]}})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>3、size</span></span>
<span class="line"><span>db.集合名.find({“键名”: {$size:n} })</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.yunfan_test.find({“list”:{$size:3}})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>4、exists</span></span>
<span class="line"><span>db.集合名.find({“键名”: {$exist: true|false} })</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.yunfan_test.find({“flag”:{$exists:true}})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>5、or</span></span>
<span class="line"><span>db.集合名.find({$or:[{条件1}, {条件2}, {条件3}…]})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.yunfan_test.find({$or:[{“name”:“张三”},{“name”:“李四”}]})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>6、模糊查询</span></span>
<span class="line"><span>db.集合名.find({“键名”: js正则表达)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.yunfan_test.find({“name”:/张三/})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>7、查询结果排序（sort）</span></span>
<span class="line"><span>db.集合名.find().sort({“键名”: 1｜-1, “键名”: 1｜-1…}) #1为升序, -1为降序</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.yunfan_test.find().sort({“age”:-1})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>8、限定返回结果数量（limit）</span></span>
<span class="line"><span>db.集合名.find().limit(n)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.集合名.find().skip(n) # 跳过n条，返回从n+1k开始的数据</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.集合名.find().skip(n).limit(m) # 跳过n条，返回后面的m条</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.yunfan_test.find().limit(1).sort({“age”:1})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>9、查询返回结果数量（count）</span></span>
<span class="line"><span>db.集合名.find().count()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.集合名.find().skip(n).count(true) # 与skip结合使用时，要加true</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.yunfan_test.find().count()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>10、聚合函数</span></span>
<span class="line"><span>| 分组函数 | 说明 |</span></span>
<span class="line"><span></span></span>
<span class="line"><span>| :-- | :-- |</span></span>
<span class="line"><span></span></span>
<span class="line"><span>| s u m ∣ 计算总和， sum | 计算总和，sum∣计算总和，sum:1同count表示计数 |</span></span>
<span class="line"><span></span></span>
<span class="line"><span>| $avg | 计算平均值 |</span></span>
<span class="line"><span></span></span>
<span class="line"><span>| $min | 获取最小值 |</span></span>
<span class="line"><span></span></span>
<span class="line"><span>| $max | 获取最大值 |</span></span>
<span class="line"><span></span></span>
<span class="line"><span>| $push | 在结果文档中插入值到一个数组中，相当于拼接字段 |</span></span>
<span class="line"><span></span></span>
<span class="line"><span>| $first | 根据资源文档的排序获取第一个文档数据 |</span></span>
<span class="line"><span></span></span>
<span class="line"><span>| $last | 根据资源文档的排序获取最后一个文档数据 |</span></span>
<span class="line"><span></span></span>
<span class="line"><span>db.集合名.aggregate(</span></span>
<span class="line"><span></span></span>
<span class="line"><span>{$group:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>{</span></span>
<span class="line"><span></span></span>
<span class="line"><span>_id:‘KaTeX parse error: Expected &#39;}&#39;, got &#39;EOF&#39; at end of input: 字段名&#39;, 别名:{聚合函数:’$字段名’}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## 例：统计同年龄的人数</span></span>
<span class="line"><span>db.yunfan_test.aggregate(</span></span>
<span class="line"><span></span></span>
<span class="line"><span>{$group:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>{</span></span>
<span class="line"><span></span></span>
<span class="line"><span>_id:‘$age’,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>count_age:{$sum:1}</span></span></code></pre></div>`,3),i=[e];function c(t,d,o,r,b,f){return a(),s("div",null,i)}const m=n(l,[["render",c]]);export{_ as __pageData,m as default};
